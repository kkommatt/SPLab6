<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="662" onload="init(evt)" viewBox="0 0 1200 662" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="662.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="645" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="645" > </text>
<g id="frames">
<g >
<title>irq_exit_rcu (40,000,000 samples, 0.54%)</title><rect x="67.9" y="357" width="6.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="70.87" y="367.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="90.4" y="213" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="93.38" y="223.5" ></text>
</g>
<g >
<title>__schedule (1,980,000,000 samples, 26.98%)</title><rect x="823.5" y="293" width="318.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="826.46" y="303.5" >__schedule</text>
</g>
<g >
<title>__irq_exit_rcu (400,000,000 samples, 5.45%)</title><rect x="669.1" y="117" width="64.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="672.13" y="127.5" >__irq_e..</text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1177.1" y="437" width="3.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1180.14" y="447.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (40,000,000 samples, 0.54%)</title><rect x="736.6" y="197" width="6.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="739.65" y="207.5" ></text>
</g>
<g >
<title>security_file_permission (20,000,000 samples, 0.27%)</title><rect x="87.2" y="293" width="3.2" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="90.17" y="303.5" ></text>
</g>
<g >
<title>do_tty_write (4,460,000,000 samples, 60.76%)</title><rect x="93.6" y="277" width="717.0" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="96.60" y="287.5" >do_tty_write</text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1148.2" y="453" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1151.20" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1151.4" y="453" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1154.42" y="463.5" ></text>
</g>
<g >
<title>__do_softirq (140,000,000 samples, 1.91%)</title><rect x="1119.3" y="197" width="22.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1122.26" y="207.5" >_..</text>
</g>
<g >
<title>finish_task_switch.isra.0 (1,980,000,000 samples, 26.98%)</title><rect x="823.5" y="277" width="318.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="826.46" y="287.5" >finish_task_switch.isra.0</text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1157.8" y="453" width="3.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1160.85" y="463.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1186.8" y="485" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1189.78" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (140,000,000 samples, 1.91%)</title><rect x="752.7" y="181" width="22.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="755.72" y="191.5" >a..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (80,000,000 samples, 1.09%)</title><rect x="112.9" y="181" width="12.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="115.89" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="103.2" y="229" width="3.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="106.24" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="813.8" y="325" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="816.81" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1141.8" y="437" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1144.77" y="447.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="87.2" y="261" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="90.17" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,000,000 samples, 0.54%)</title><rect x="67.9" y="389" width="6.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="70.87" y="399.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="103.2" y="181" width="3.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="106.24" y="191.5" ></text>
</g>
<g >
<title>pty_write (240,000,000 samples, 3.27%)</title><rect x="736.6" y="229" width="38.6" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="739.65" y="239.5" >pty..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="778.4" y="229" width="3.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="781.45" y="239.5" ></text>
</g>
<g >
<title>__do_softirq (140,000,000 samples, 1.91%)</title><rect x="752.7" y="117" width="22.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="755.72" y="127.5" >_..</text>
</g>
<g >
<title>vbg_heartbeat_timer (20,000,000 samples, 0.27%)</title><rect x="1148.2" y="357" width="3.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1151.20" y="367.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (20,000,000 samples, 0.27%)</title><rect x="71.1" y="293" width="3.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="74.09" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,620,000,000 samples, 90.19%)</title><rect x="77.5" y="373" width="1064.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="80.52" y="383.5" >do_syscall_64</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1141.8" y="469" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1144.77" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1167.5" y="485" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1170.49" y="495.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (3,760,000,000 samples, 51.23%)</title><rect x="129.0" y="181" width="604.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="131.96" y="191.5" >finish_task_switch.isra.0</text>
</g>
<g >
<title>std::endl&lt;char, std::char_traits&lt;char&gt; &gt; (6,760,000,000 samples, 92.10%)</title><rect x="64.7" y="517" width="1086.7" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="67.66" y="527.5" >std::endl&lt;char, std::char_traits&lt;char&gt; &gt;</text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="807.4" y="181" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="810.38" y="191.5" ></text>
</g>
<g >
<title>mutex_unlock (20,000,000 samples, 0.27%)</title><rect x="733.4" y="245" width="3.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="736.43" y="255.5" ></text>
</g>
<g >
<title>vbg_req_perform (20,000,000 samples, 0.27%)</title><rect x="71.1" y="245" width="3.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="74.09" y="255.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="84.0" y="245" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="86.95" y="255.5" ></text>
</g>
<g >
<title>pty_write (20,000,000 samples, 0.27%)</title><rect x="778.4" y="245" width="3.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="781.45" y="255.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (140,000,000 samples, 1.91%)</title><rect x="1119.3" y="213" width="22.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1122.26" y="223.5" >_..</text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="817.0" y="229" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="820.03" y="239.5" ></text>
</g>
<g >
<title>__fdget_pos (20,000,000 samples, 0.27%)</title><rect x="77.5" y="325" width="3.2" height="15.0" fill="rgb(216,55,13)" rx="2" ry="2" />
<text  x="80.52" y="335.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (80,000,000 samples, 1.09%)</title><rect x="1151.4" y="501" width="12.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1154.42" y="511.5" ></text>
</g>
<g >
<title>run_timer_softirq (20,000,000 samples, 0.27%)</title><rect x="122.5" y="101" width="3.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="125.53" y="111.5" ></text>
</g>
<g >
<title>file_tty_write.constprop.0 (4,480,000,000 samples, 61.04%)</title><rect x="90.4" y="293" width="720.2" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="93.38" y="303.5" >file_tty_write.constprop.0</text>
</g>
<g >
<title>__irq_exit_rcu (140,000,000 samples, 1.91%)</title><rect x="752.7" y="133" width="22.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="755.72" y="143.5" >_..</text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="1157.8" y="421" width="3.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1160.85" y="431.5" ></text>
</g>
<g >
<title>process_output_block (260,000,000 samples, 3.54%)</title><rect x="736.6" y="245" width="41.8" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="739.65" y="255.5" >pro..</text>
</g>
<g >
<title>__schedule (3,780,000,000 samples, 51.50%)</title><rect x="125.7" y="197" width="607.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="128.75" y="207.5" >__schedule</text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="87.2" y="213" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="90.17" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (140,000,000 samples, 1.91%)</title><rect x="1119.3" y="245" width="22.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1122.26" y="255.5" >s..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="807.4" y="229" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="810.38" y="239.5" ></text>
</g>
<g >
<title>schedule (1,980,000,000 samples, 26.98%)</title><rect x="823.5" y="309" width="318.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="826.46" y="319.5" >schedule</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1148.2" y="469" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1151.20" y="479.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="90.4" y="245" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="93.38" y="255.5" ></text>
</g>
<g >
<title>call_timer_fn (20,000,000 samples, 0.27%)</title><rect x="1148.2" y="373" width="3.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1151.20" y="383.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="1161.1" y="405" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1164.06" y="415.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (160,000,000 samples, 2.18%)</title><rect x="781.7" y="181" width="25.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="784.66" y="191.5" >f..</text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="103.2" y="197" width="3.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="106.24" y="207.5" ></text>
</g>
<g >
<title>__mempcpy_ssse3 (20,000,000 samples, 0.27%)</title><rect x="1154.6" y="437" width="3.2" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="1157.63" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6,640,000,000 samples, 90.46%)</title><rect x="74.3" y="389" width="1067.5" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="77.31" y="399.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__do_softirq (80,000,000 samples, 1.09%)</title><rect x="112.9" y="117" width="12.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="115.89" y="127.5" ></text>
</g>
<g >
<title>__do_softirq (40,000,000 samples, 0.54%)</title><rect x="67.9" y="325" width="6.4" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="70.87" y="335.5" ></text>
</g>
<g >
<title>vbg_req_perform (20,000,000 samples, 0.27%)</title><rect x="1148.2" y="341" width="3.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1151.20" y="351.5" ></text>
</g>
<g >
<title>call_timer_fn (20,000,000 samples, 0.27%)</title><rect x="71.1" y="277" width="3.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="74.09" y="287.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="90.4" y="229" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="93.38" y="239.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="87.2" y="229" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="90.17" y="239.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="1151.4" y="389" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1154.42" y="399.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="100.0" y="213" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="103.03" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="778.4" y="213" width="3.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="781.45" y="223.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="96.8" y="213" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="99.81" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="77.5" y="293" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="80.52" y="303.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="77.5" y="229" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="80.52" y="239.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="84.0" y="277" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="86.95" y="287.5" ></text>
</g>
<g >
<title>std::ostream::sentry::sentry (20,000,000 samples, 0.27%)</title><rect x="1161.1" y="485" width="3.2" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="1164.06" y="495.5" ></text>
</g>
<g >
<title>vbg_heartbeat_timer (20,000,000 samples, 0.27%)</title><rect x="71.1" y="261" width="3.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="74.09" y="271.5" ></text>
</g>
<g >
<title>irq_exit_rcu (140,000,000 samples, 1.91%)</title><rect x="1119.3" y="229" width="22.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1122.26" y="239.5" >i..</text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1177.1" y="453" width="3.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1180.14" y="463.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1148.2" y="437" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1151.20" y="447.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (2,020,000,000 samples, 27.52%)</title><rect x="817.0" y="357" width="324.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="820.03" y="367.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1167.5" y="501" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1170.49" y="511.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1186.8" y="453" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1189.78" y="463.5" ></text>
</g>
<g >
<title>gcd (340,000,000 samples, 4.63%)</title><rect x="10.0" y="517" width="54.7" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >gcd</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (40,000,000 samples, 0.54%)</title><rect x="736.6" y="165" width="6.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="739.65" y="175.5" ></text>
</g>
<g >
<title>std::ostream::flush (60,000,000 samples, 0.82%)</title><rect x="1180.4" y="517" width="9.6" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1183.35" y="527.5" ></text>
</g>
<g >
<title>vbg_heartbeat_timer (20,000,000 samples, 0.27%)</title><rect x="122.5" y="53" width="3.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="125.53" y="63.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (140,000,000 samples, 1.91%)</title><rect x="42.2" y="453" width="22.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="45.15" y="463.5" >_..</text>
</g>
<g >
<title>do_output_char (120,000,000 samples, 1.63%)</title><rect x="106.5" y="245" width="19.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="109.46" y="255.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (20,000,000 samples, 0.27%)</title><rect x="1148.2" y="389" width="3.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="1151.20" y="399.5" ></text>
</g>
<g >
<title>vfs_write (4,520,000,000 samples, 61.58%)</title><rect x="84.0" y="325" width="726.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="86.95" y="335.5" >vfs_write</text>
</g>
<g >
<title>_IO_new_file_overflow (6,720,000,000 samples, 91.55%)</title><rect x="64.7" y="485" width="1080.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="67.66" y="495.5" >_IO_new_file_overflow</text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1167.5" y="453" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1170.49" y="463.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="1148.2" y="421" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1151.20" y="431.5" ></text>
</g>
<g >
<title>tty_write_room (20,000,000 samples, 0.27%)</title><rect x="807.4" y="261" width="3.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="810.38" y="271.5" ></text>
</g>
<g >
<title>wait_woken (160,000,000 samples, 2.18%)</title><rect x="781.7" y="245" width="25.7" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="784.66" y="255.5" >w..</text>
</g>
<g >
<title>mutex_lock (3,780,000,000 samples, 51.50%)</title><rect x="125.7" y="245" width="607.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="128.75" y="255.5" >mutex_lock</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1161.1" y="469" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1164.06" y="479.5" ></text>
</g>
<g >
<title>__GI__IO_putc (20,000,000 samples, 0.27%)</title><rect x="1145.0" y="485" width="3.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1147.99" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1157.8" y="469" width="3.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1160.85" y="479.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="96.8" y="229" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="99.81" y="239.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (40,000,000 samples, 0.54%)</title><rect x="810.6" y="357" width="6.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="813.60" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_write (6,700,000,000 samples, 91.28%)</title><rect x="64.7" y="405" width="1077.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="67.66" y="415.5" >__GI___libc_write</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="96.8" y="245" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="99.81" y="255.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (40,000,000 samples, 0.54%)</title><rect x="67.9" y="341" width="6.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="70.87" y="351.5" ></text>
</g>
<g >
<title>n_tty_write (4,380,000,000 samples, 59.67%)</title><rect x="103.2" y="261" width="704.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="106.24" y="271.5" >n_tty_write</text>
</g>
<g >
<title>__wake_up (20,000,000 samples, 0.27%)</title><rect x="93.6" y="261" width="3.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="96.60" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (40,000,000 samples, 0.54%)</title><rect x="736.6" y="181" width="6.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="739.65" y="191.5" ></text>
</g>
<g >
<title>__schedule (160,000,000 samples, 2.18%)</title><rect x="781.7" y="197" width="25.7" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="784.66" y="207.5" >_..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="90.4" y="277" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="93.38" y="287.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1151.4" y="421" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1154.42" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="103.2" y="245" width="3.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="106.24" y="255.5" ></text>
</g>
<g >
<title>__GI__IO_fflush (40,000,000 samples, 0.54%)</title><rect x="1183.6" y="501" width="6.4" height="15.0" fill="rgb(246,193,46)" rx="2" ry="2" />
<text  x="1186.57" y="511.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1161.1" y="421" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1164.06" y="431.5" ></text>
</g>
<g >
<title>rw_verify_area (20,000,000 samples, 0.27%)</title><rect x="87.2" y="309" width="3.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="90.17" y="319.5" ></text>
</g>
<g >
<title>_IO_acquire_lock_fct (20,000,000 samples, 0.27%)</title><rect x="1151.4" y="469" width="3.2" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1154.42" y="479.5" ></text>
</g>
<g >
<title>__do_softirq (40,000,000 samples, 0.54%)</title><rect x="736.6" y="117" width="6.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="739.65" y="127.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (80,000,000 samples, 1.09%)</title><rect x="112.9" y="133" width="12.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="115.89" y="143.5" ></text>
</g>
<g >
<title>tty_write_room (20,000,000 samples, 0.27%)</title><rect x="775.2" y="229" width="3.2" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="778.23" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (140,000,000 samples, 1.91%)</title><rect x="42.2" y="485" width="22.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="45.15" y="495.5" >s..</text>
</g>
<g >
<title>__do_softirq (140,000,000 samples, 1.91%)</title><rect x="42.2" y="437" width="22.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="45.15" y="447.5" >_..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="77.5" y="277" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="80.52" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1177.1" y="485" width="3.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1180.14" y="495.5" ></text>
</g>
<g >
<title>pty_write (120,000,000 samples, 1.63%)</title><rect x="106.5" y="229" width="19.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="109.46" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="807.4" y="245" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="810.38" y="255.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="778.4" y="165" width="3.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="781.45" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_loop (2,020,000,000 samples, 27.52%)</title><rect x="817.0" y="325" width="324.8" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="820.03" y="335.5" >exit_to_user_mode_loop</text>
</g>
<g >
<title>std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt; (80,000,000 samples, 1.09%)</title><rect x="1151.4" y="517" width="12.9" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1154.42" y="527.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="84.0" y="261" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="86.95" y="271.5" ></text>
</g>
<g >
<title>run_timer_softirq (20,000,000 samples, 0.27%)</title><rect x="1148.2" y="405" width="3.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1151.20" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (80,000,000 samples, 1.09%)</title><rect x="112.9" y="165" width="12.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="115.89" y="175.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (240,000,000 samples, 3.27%)</title><rect x="736.6" y="213" width="38.6" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="739.65" y="223.5" >tty..</text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="778.4" y="197" width="3.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="781.45" y="207.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="77.5" y="261" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="80.52" y="271.5" ></text>
</g>
<g >
<title>__run_timers.part.0 (20,000,000 samples, 0.27%)</title><rect x="122.5" y="85" width="3.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="125.53" y="95.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="733.4" y="181" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="736.43" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="813.8" y="341" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="816.81" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="84.0" y="293" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="86.95" y="303.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (40,000,000 samples, 0.54%)</title><rect x="736.6" y="133" width="6.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="739.65" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="733.4" y="229" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="736.43" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="90.4" y="261" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="93.38" y="271.5" ></text>
</g>
<g >
<title>_start (7,340,000,000 samples, 100.00%)</title><rect x="10.0" y="581" width="1180.0" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >_start</text>
</g>
<g >
<title>mutex_unlock (20,000,000 samples, 0.27%)</title><rect x="100.0" y="261" width="3.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="103.03" y="271.5" ></text>
</g>
<g >
<title>_IO_new_do_write (6,700,000,000 samples, 91.28%)</title><rect x="64.7" y="469" width="1077.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="67.66" y="479.5" >_IO_new_do_write</text>
</g>
<g >
<title>irq_exit_rcu (140,000,000 samples, 1.91%)</title><rect x="752.7" y="149" width="22.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="755.72" y="159.5" >i..</text>
</g>
<g >
<title>all (7,340,000,000 samples, 100%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="813.8" y="293" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="816.81" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1177.1" y="469" width="3.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1180.14" y="479.5" ></text>
</g>
<g >
<title>tty_insert_flip_string_and_push_buffer (120,000,000 samples, 1.63%)</title><rect x="106.5" y="213" width="19.2" height="15.0" fill="rgb(217,55,13)" rx="2" ry="2" />
<text  x="109.46" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1151.4" y="437" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1154.42" y="447.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="96.8" y="197" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="99.81" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1141.8" y="453" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1144.77" y="463.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1151.4" y="405" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1154.42" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1161.1" y="453" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1164.06" y="463.5" ></text>
</g>
<g >
<title>irq_exit_rcu (400,000,000 samples, 5.45%)</title><rect x="669.1" y="133" width="64.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="672.13" y="143.5" >irq_exi..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="817.0" y="261" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="820.03" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="817.0" y="245" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="820.03" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="100.0" y="229" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="103.03" y="239.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="100.0" y="181" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="103.03" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_write (4,560,000,000 samples, 62.13%)</title><rect x="77.5" y="357" width="733.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="80.52" y="367.5" >__x64_sys_write</text>
</g>
<g >
<title>irq_exit_rcu (40,000,000 samples, 0.54%)</title><rect x="736.6" y="149" width="6.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="739.65" y="159.5" ></text>
</g>
<g >
<title>queue_work_on (120,000,000 samples, 1.63%)</title><rect x="106.5" y="197" width="19.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="109.46" y="207.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="813.8" y="309" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="816.81" y="319.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="1186.8" y="421" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1189.78" y="431.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="807.4" y="197" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="810.38" y="207.5" ></text>
</g>
<g >
<title>preempt_schedule_common (3,780,000,000 samples, 51.50%)</title><rect x="125.7" y="213" width="607.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="128.75" y="223.5" >preempt_schedule_common</text>
</g>
<g >
<title>__get_user_8 (20,000,000 samples, 0.27%)</title><rect x="817.0" y="277" width="3.2" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="820.03" y="287.5" ></text>
</g>
<g >
<title>irq_exit_rcu (140,000,000 samples, 1.91%)</title><rect x="42.2" y="469" width="22.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="45.15" y="479.5" >i..</text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="1141.8" y="405" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1144.77" y="415.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1157.8" y="437" width="3.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1160.85" y="447.5" ></text>
</g>
<g >
<title>schedule_timeout (160,000,000 samples, 2.18%)</title><rect x="781.7" y="229" width="25.7" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="784.66" y="239.5" >s..</text>
</g>
<g >
<title>__libc_start_call_main (7,340,000,000 samples, 100.00%)</title><rect x="10.0" y="549" width="1180.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >__libc_start_call_main</text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1186.8" y="437" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1189.78" y="447.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (400,000,000 samples, 5.45%)</title><rect x="669.1" y="149" width="64.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="672.13" y="159.5" >sysvec_..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="87.2" y="245" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="90.17" y="255.5" ></text>
</g>
<g >
<title>new_do_write (6,700,000,000 samples, 91.28%)</title><rect x="64.7" y="437" width="1077.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="67.66" y="447.5" >new_do_write</text>
</g>
<g >
<title>call_timer_fn (20,000,000 samples, 0.27%)</title><rect x="122.5" y="69" width="3.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="125.53" y="79.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::_M_insert_int&lt;long&gt; (60,000,000 samples, 0.82%)</title><rect x="1170.7" y="501" width="9.7" height="15.0" fill="rgb(223,82,19)" rx="2" ry="2" />
<text  x="1173.71" y="511.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="817.0" y="213" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="820.03" y="223.5" ></text>
</g>
<g >
<title>main (7,340,000,000 samples, 100.00%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >main</text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="813.8" y="277" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="816.81" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (20,000,000 samples, 0.27%)</title><rect x="93.6" y="229" width="3.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="96.60" y="239.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="77.5" y="245" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="80.52" y="255.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="96.8" y="181" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="99.81" y="191.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1161.1" y="437" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1164.06" y="447.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2,020,000,000 samples, 27.52%)</title><rect x="817.0" y="341" width="324.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="820.03" y="351.5" >exit_to_user_mode_prepare</text>
</g>
<g >
<title>__wake_up_common_lock (20,000,000 samples, 0.27%)</title><rect x="93.6" y="245" width="3.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="96.60" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1148.2" y="485" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1151.20" y="495.5" ></text>
</g>
<g >
<title>_IO_new_file_write (6,700,000,000 samples, 91.28%)</title><rect x="64.7" y="421" width="1077.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="67.66" y="431.5" >_IO_new_file_write</text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="733.4" y="165" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="736.43" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="84.0" y="309" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="86.95" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (140,000,000 samples, 1.91%)</title><rect x="42.2" y="501" width="22.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="45.15" y="511.5" >a..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (40,000,000 samples, 0.54%)</title><rect x="67.9" y="373" width="6.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="70.87" y="383.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="103.2" y="213" width="3.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="106.24" y="223.5" ></text>
</g>
<g >
<title>__cond_resched (3,780,000,000 samples, 51.50%)</title><rect x="125.7" y="229" width="607.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="128.75" y="239.5" >__cond_resched</text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="100.0" y="197" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="103.03" y="207.5" ></text>
</g>
<g >
<title>apparmor_file_permission (20,000,000 samples, 0.27%)</title><rect x="87.2" y="277" width="3.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="90.17" y="287.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="1177.1" y="421" width="3.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1180.14" y="431.5" ></text>
</g>
<g >
<title>blkcg_maybe_throttle_current (20,000,000 samples, 0.27%)</title><rect x="820.2" y="309" width="3.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="823.25" y="319.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="733.4" y="213" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="736.43" y="223.5" ></text>
</g>
<g >
<title>tty_buffer_space_avail (20,000,000 samples, 0.27%)</title><rect x="775.2" y="213" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="778.23" y="223.5" ></text>
</g>
<g >
<title>schedule (160,000,000 samples, 2.18%)</title><rect x="781.7" y="213" width="25.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="784.66" y="223.5" >s..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (140,000,000 samples, 1.91%)</title><rect x="752.7" y="165" width="22.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="755.72" y="175.5" >s..</text>
</g>
<g >
<title>run_timer_softirq (20,000,000 samples, 0.27%)</title><rect x="71.1" y="309" width="3.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="74.09" y="319.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="817.0" y="197" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="820.03" y="207.5" ></text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="87.2" y="197" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="90.17" y="207.5" ></text>
</g>
<g >
<title>__get_task_ioprio (20,000,000 samples, 0.27%)</title><rect x="80.7" y="325" width="3.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="83.74" y="335.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (20,000,000 samples, 0.27%)</title><rect x="1154.6" y="469" width="3.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1157.63" y="479.5" ></text>
</g>
<g >
<title>_IO_new_do_write (6,700,000,000 samples, 91.28%)</title><rect x="64.7" y="453" width="1077.1" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="67.66" y="463.5" >_IO_new_do_write</text>
</g>
<g >
<title>__libc_start_main_impl (7,340,000,000 samples, 100.00%)</title><rect x="10.0" y="565" width="1180.0" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >__libc_start_main_impl</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (140,000,000 samples, 1.91%)</title><rect x="1119.3" y="261" width="22.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1122.26" y="271.5" >a..</text>
</g>
<g >
<title>__do_softirq (20,000,000 samples, 0.27%)</title><rect x="1167.5" y="437" width="3.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1170.49" y="447.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1141.8" y="421" width="3.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1144.77" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1186.8" y="469" width="3.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1189.78" y="479.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="1157.8" y="485" width="3.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1160.85" y="495.5" ></text>
</g>
<g >
<title>__fget_light (20,000,000 samples, 0.27%)</title><rect x="77.5" y="309" width="3.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="80.52" y="319.5" ></text>
</g>
<g >
<title>mutex_trylock (20,000,000 samples, 0.27%)</title><rect x="96.8" y="261" width="3.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="99.81" y="271.5" ></text>
</g>
<g >
<title>ksys_write (4,560,000,000 samples, 62.13%)</title><rect x="77.5" y="341" width="733.1" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="80.52" y="351.5" >ksys_write</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (400,000,000 samples, 5.45%)</title><rect x="669.1" y="165" width="64.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="672.13" y="175.5" >asm_sys..</text>
</g>
<g >
<title>__rseq_handle_notify_resume (20,000,000 samples, 0.27%)</title><rect x="817.0" y="309" width="3.2" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="820.03" y="319.5" ></text>
</g>
<g >
<title>rseq_ip_fixup (20,000,000 samples, 0.27%)</title><rect x="817.0" y="293" width="3.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="820.03" y="303.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="1167.5" y="469" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1170.49" y="479.5" ></text>
</g>
<g >
<title>tty_write (4,480,000,000 samples, 61.04%)</title><rect x="90.4" y="309" width="720.2" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="93.38" y="319.5" >tty_write</text>
</g>
<g >
<title>__irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="778.4" y="181" width="3.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="781.45" y="191.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="807.4" y="213" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="810.38" y="223.5" ></text>
</g>
<g >
<title>std::ostream::put (6,760,000,000 samples, 92.10%)</title><rect x="64.7" y="501" width="1086.7" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="67.66" y="511.5" >std::ostream::put</text>
</g>
<g >
<title>__x64_sys_write (20,000,000 samples, 0.27%)</title><rect x="74.3" y="373" width="3.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="77.31" y="383.5" ></text>
</g>
<g >
<title>main (7,340,000,000 samples, 100.00%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >main</text>
</g>
<g >
<title>vbg_req_perform (20,000,000 samples, 0.27%)</title><rect x="122.5" y="37" width="3.2" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="125.53" y="47.5" ></text>
</g>
<g >
<title>irq_exit_rcu (80,000,000 samples, 1.09%)</title><rect x="112.9" y="149" width="12.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="115.89" y="159.5" ></text>
</g>
<g >
<title>queue_work_on (200,000,000 samples, 2.72%)</title><rect x="743.1" y="197" width="32.1" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="746.08" y="207.5" >qu..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,000,000 samples, 0.27%)</title><rect x="100.0" y="245" width="3.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="103.03" y="255.5" ></text>
</g>
<g >
<title>__GI__IO_fwrite (40,000,000 samples, 0.54%)</title><rect x="1151.4" y="485" width="6.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1154.42" y="495.5" ></text>
</g>
<g >
<title>_IO_new_file_xsputn (20,000,000 samples, 0.27%)</title><rect x="1154.6" y="453" width="3.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1157.63" y="463.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;long&gt; (100,000,000 samples, 1.36%)</title><rect x="1164.3" y="517" width="16.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="1167.28" y="527.5" ></text>
</g>
<g >
<title>irq_exit_rcu (20,000,000 samples, 0.27%)</title><rect x="733.4" y="197" width="3.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="736.43" y="207.5" ></text>
</g>
<g >
<title>__do_softirq (400,000,000 samples, 5.45%)</title><rect x="669.1" y="101" width="64.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="672.13" y="111.5" >__do_so..</text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (20,000,000 samples, 0.27%)</title><rect x="1173.9" y="485" width="3.2" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1176.92" y="495.5" ></text>
</g>
</g>
</svg>
